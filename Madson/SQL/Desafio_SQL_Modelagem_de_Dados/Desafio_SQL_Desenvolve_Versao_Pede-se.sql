-- 1) CONSULTAS SIMPLES
-- 1.1) O nome dos autores em ordem alfabética.
SELECT NOME
FROM AUTOR
ORDER BY NOME ASC

-- 1.2) O nome dos alunos que começam com a letra P.
SELECT NOME
FROM ALUNO
WHERE NOME LIKE 'P%'

-- 1.3) O nome dos livros da categoria Banco de Dados ou Java.
SELECT NOME
FROM LIVRO
WHERE IDCATEGORIA = 1 OR IDCATEGORIA = 3

-- 1.4) O nome dos livros da editora Bookman.
SELECT NOME
FROM LIVRO
WHERE IDEDITORA = 1

-- 1.5) Os empréstimos realizados entre 05/05/2023 e 10/05/2023
SELECT * 
FROM EMPRESTIMO
WHERE DATA_EMPRESTIMO 
	BETWEEN '05-05-2023' AND '10-05-2023'

-- 1.6) Os empréstimos que não foram feitos entre 05/05/2023 e 10/05/2023
SELECT * 
FROM EMPRESTIMO
WHERE DATA_EMPRESTIMO 
	NOT BETWEEN '05-05-2023' AND '10-05-2023'

-- 1.7) Os empréstimos que os livros já foram devolvidos.
SELECT * 
FROM EMPRESTIMO
WHERE DEVOLVIDO = 'S'

-- 2) CONSULTAS COM AGRUPAMENTO SIMPLES
-- 2.1) A quantidade de livros.
SELECT COUNT(NOME) 
FROM LIVRO

-- 2.2) O somatório do valor dos empréstimos.
SELECT SUM(VALOR) 
FROM EMPRESTIMO

-- 2.3) A média do valor dos empréstimos.
SELECT AVG(VALOR) 
FROM EMPRESTIMO

-- 2.4) O maior valor dos empréstimos.
SELECT MAX(VALOR) 
FROM EMPRESTIMO

-- 2.5) O menor valor dos empréstimos.
SELECT MIN(VALOR) 
FROM EMPRESTIMO

-- 2.6) O somatório do valor do empréstimo que estão entre 05/05/2023 e 10/05/2023.
SELECT SUM(VALOR)
FROM EMPRESTIMO
WHERE DATA_EMPRESTIMO
	BETWEEN '05-05-2023' AND '10-05-2023'

-- 2.7) A quantidade de empréstimos que estão entre 01/05/2023 e 05/05/2023
SELECT COUNT(IDEMPRESTIMO)
FROM EMPRESTIMO
WHERE DATA_EMPRESTIMO
    BETWEEN '01-05-2023' AND '05-05-2023'

-- 3) CONSULTAS COM JOIN
-- 3.1) O nome do livro, a categoria e a editora (LIVRO) – fazer uma view
CREATE VIEW VW_LIVRO_CATEGORIA_EDITORA
AS
SELECT
    LIVRO.NOME AS NOME_LIVRO,
    CATEGORIA.NOME AS NOME_CATEGORIA,
    EDITORA.NOME AS NOME_EDITORA
FROM
    LIVRO
        INNER JOIN EDITORA
            ON LIVRO.IDEDITORA = EDITORA.IDEDITORA
        INNER JOIN CATEGORIA
            ON LIVRO.IDCATEGORIA = CATEGORIA.IDCATEGORIA

-- 3.2) O nome do livro e o nome do autor (LIVRO_AUTOR) – fazer uma view.
CREATE VIEW VW_NOME_LIVRO_NOME_AUTOR
AS
SELECT
    LIVRO.NOME AS NOME_LIVRO,
    AUTOR.NOME AS NOME_AUTOR
FROM
    LIVRO
        INNER JOIN LIVRO_AUTOR
            ON LIVRO.IDLIVRO = LIVRO_AUTOR.IDLIVRO
        INNER JOIN AUTOR
            ON AUTOR.IDAUTOR = LIVRO_AUTOR.IDAUTOR

-- 3.3) O nome dos livros do autor Ian Graham (LIVRO_AUTOR).
CREATE VIEW VW_NOME_LIVRO_IAN_GRAHAM
AS
SELECT
    LIVRO.NOME AS NOME_LIVRO
FROM
    LIVRO
        INNER JOIN LIVRO_AUTOR
            ON LIVRO.IDLIVRO = LIVRO_AUTOR.IDLIVRO
        INNER JOIN AUTOR
            ON AUTOR.IDAUTOR = LIVRO_AUTOR.IDAUTOR
WHERE AUTOR.NOME = 'Ian Graham'

-- 3.4) O nome do aluno, a data do empréstimo e a data de devolução (EMPRESTIMO).
CREATE VIEW VW_NOME_DATA_EMPRESTIMO_DATA_DEVOLUCAO
AS
SELECT
    ALUNO.NOME AS NOME_ALUNO,
    EMPRESTIMO.DATA_EMPRESTIMO AS DATA_EMPRESTIMO,
    EMPRESTIMO.DATA_DEVOLUCAO AS DATA_DEVOLUCAO
FROM
    EMPRESTIMO
        INNER JOIN ALUNO
            ON EMPRESTIMO.IDALUNO = ALUNO.IDALUNO
WHERE EMPRESTIMO.DEVOLVIDO = 'S'
-- 3.5) O nome de todos os livros que foram emprestados (EMPRESTIMO_LIVRO).
CREATE VIEW VW_NOME_TODOS_LIVROS_EMPRESTADOS
AS
SELECT
    LIVRO.NOME AS NOME_LIVRO
FROM
    LIVRO
        INNER JOIN EMPRESTIMO_LIVRO
            ON LIVRO.IDLIVRO = EMPRESTIMO_LIVRO.IDLIVRO
-- 4) CONSULTAS COM AGRUPAMENTO + JOIN
-- 4.1) O nome da editora e a quantidade de livros de cada editora (LIVRO).
CREATE VIEW VW_NOME_EDITORA_QUANTIDADE_LIVROS_CADA_EDITORA
AS
SELECT
	EDITORA.NOME AS NOME_EDITORA,
    COUNT(LIVRO.IDEDITORA) AS QUANTIDADE_LIVROS_CADA_EDITORA
FROM
    EDITORA
        INNER JOIN LIVRO
            ON EDITORA.IDEDITORA = LIVRO.IDEDITORA
GROUP BY EDITORA.NOME

-- 4.2) O nome da categoria e a quantidade de livros de cada categoria (LIVRO).
CREATE VIEW VW_NOME_CATEGORIA_QUANTIDADE_LIVROS_CADA_CATEGORIA
AS
SELECT
	CATEGORIA.NOME AS NOME_CATEGORIA,
    COUNT(LIVRO.IDCATEGORIA) AS QUANTIDADE_LIVROS_CADA_CATEGORIA
FROM
    CATEGORIA
        INNER JOIN LIVRO
            ON CATEGORIA.IDCATEGORIA = LIVRO.IDCATEGORIA
GROUP BY CATEGORIA.NOME

-- 4.3) O nome do autor e a quantidade de livros de cada autor (LIVRO_AUTOR).
CREATE VIEW VW_NOME_AUTOR_QUANTIDADE_LIVROS_CADA_AUTOR
AS
SELECT
	AUTOR.NOME AS NOME_AUTOR,
    COUNT(LIVRO_AUTOR.IDAUTOR) AS QUANTIDADE_LIVROS_CADA_AUTOR
FROM
    AUTOR
        INNER JOIN LIVRO_AUTOR
            ON AUTOR.IDAUTOR = LIVRO_AUTOR.IDAUTOR
GROUP BY AUTOR.NOME

-- 4.4) O nome do aluno e a quantidade de empréstimo de cada aluno (EMPRESTIMO_LIVRO).
CREATE VIEW VW_NOME_ALUNO_QUANTIDADE_EMPRESTIMO_CADA_ALUNO
AS
SELECT
    ALUNO.NOME AS NOME_ALUNO,
    COUNT(EMPRESTIMO.IDEMPRESTIMO) AS QUANTIDADE_EMPRESTIMO_CADA_ALUNO
FROM
    ALUNO
        INNER JOIN EMPRESTIMO
            ON ALUNO.IDALUNO = EMPRESTIMO.IDALUNO
        INNER JOIN EMPRESTIMO_LIVRO
            ON EMPRESTIMO.IDEMPRESTIMO = EMPRESTIMO_LIVRO.IDEMPRESTIMO
GROUP BY ALUNO.NOME

-- 4.5) O nome do aluno e o somatório do valor total dos empréstimos de cada aluno (EMPRESTIMO).
CREATE VIEW VW_NOME_ALUNO_SOMATORIO_VALOR_TOTAL_EMPRESTIMOS_CADA_ALUNO
AS
SELECT
    ALUNO.NOME AS NOME_ALUNO,
    SUM(EMPRESTIMO.VALOR) AS SOMATORIO_VALOR_TOTAL_EMPRESTIMO_CADA_ALUNO
FROM
    ALUNO
        INNER JOIN EMPRESTIMO
            ON ALUNO.IDALUNO = EMPRESTIMO.IDALUNO
GROUP BY ALUNO.NOME

-- 4.6) O nome do aluno e o somatório do valor total dos empréstimos de cada aluno somente daqueles que o somatório for maior do que 7,00 (EMPRESTIMO).
CREATE VIEW VW_NOME_ALUNO_SOMATORIO_VALOR_TOTAL_EMPRESTIMOS_CADA_ALUNO_MAIOR_7
AS
SELECT
    ALUNO.NOME AS NOME_ALUNO,
    SUM(EMPRESTIMO.VALOR) AS SOMATORIO_VALOR_TOTAL_EMPRESTIMO_CADA_ALUNO_MAIOR_7
FROM
    ALUNO
        INNER JOIN EMPRESTIMO
            ON ALUNO.IDALUNO = EMPRESTIMO.IDALUNO
GROUP BY ALUNO.NOME
HAVING SUM(EMPRESTIMO.VALOR) > 7

-- 5) CONSULTAS COMANDOS DIVERSOS
-- 5.1) O nome de todos os alunos em ordem decrescente e em letra maiúscula.
SELECT NOME
FROM ALUNO
WHERE LEFT(NOME, 1) = UPPER(LEFT(NOME, 1))
ORDER BY NOME DESC

-- 5.2) Os empréstimos que foram feitos no mês 04 de 2023.
SELECT *
FROM EMPRESTIMO
WHERE DATA_EMPRESTIMO BETWEEN '2023-04-01' AND '2023-04-30'

-- 5.3) Todos os campos do empréstimo. Caso já tenha sido devolvido, mostrar a mensagem “Devolução completa”, senão “Em atraso”.
SELECT 
	*,
	CASE
		WHEN DEVOLVIDO = 'S'
			THEN 'Devolução completa.'
		ELSE
			'Em atraso.'
	END AS SITUACAO
FROM EMPRESTIMO

-- 5.4) Somente o caractere 5 até o caractere 10 do nome dos autores.
SELECT SUBSTRING(NOME, 5, 10) AS PARTE_DO_NOME
FROM AUTOR

-- 5.5) O valor do empréstimo e somente o mês da data de empréstimo. Escreva “Janeiro”, “Fevereiro”, etc
SELECT
    EMPRESTIMO.VALOR AS VALOR_EMPRESTIMO,
    CASE
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 1 
            THEN 'Janeiro'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 2 
            THEN 'Fevereiro'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 3 
            THEN 'Março'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 4 
            THEN 'Abril'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 5 
            THEN 'Maio'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 6 
            THEN 'Junho'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 7 
            THEN 'Julho'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 8 
            THEN 'Agosto'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 9 
            THEN 'Setembro'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 10 
            THEN 'Outubro'
        WHEN EXTRACT(MONTH FROM EMPRESTIMO.DATA_EMPRESTIMO) = 11 
            THEN 'Novembro'
        ELSE 'Dezembro'
    END AS MES_DATA_EMPRESTIMO
FROM EMPRESTIMO

-- 6) SUBCONSULTAS
-- 6.1) A data do empréstimo e o valor dos empréstimos que o valor seja maior que a média de todos os empréstimos.
SELECT
  EMPRESTIMO.DATA_EMPRESTIMO AS DATA_EMPRESTIMO,
  EMPRESTIMO.VALOR AS VALOR_EMPRESTIMO
FROM EMPRESTIMO
WHERE EMPRESTIMO.VALOR > (
  SELECT AVG(VALOR)
  FROM EMPRESTIMO
)

-- 6.2) A data do empréstimo e o valor dos empréstimos que possuem mais de um livro.
SELECT
    EMPRESTIMO.DATA_EMPRESTIMO AS DATA_EMPRESTIMO,
    EMPRESTIMO.VALOR AS VALOR_EMPRESTIMO
FROM EMPRESTIMO
WHERE (
    SELECT COUNT(EMPRESTIMO_LIVRO.IDLIVRO)
    FROM EMPRESTIMO_LIVRO
    WHERE EMPRESTIMO_LIVRO.IDEMPRESTIMO = EMPRESTIMO.IDEMPRESTIMO
) > 1

-- 6.3) A data do empréstimo e o valor dos empréstimos que o valor seja menor que a soma de todos os empréstimos.
SELECT
  EMPRESTIMO.DATA_EMPRESTIMO AS DATA_EMPRESTIMO,
  EMPRESTIMO.VALOR AS VALOR_EMPRESTIMO
FROM EMPRESTIMO
WHERE EMPRESTIMO.VALOR < (
  SELECT SUM(VALOR)
  FROM EMPRESTIMO
)